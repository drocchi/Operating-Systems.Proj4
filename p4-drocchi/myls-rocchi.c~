
#include <time.h>
#include <dirent.h>
#include <stdlib.h>
#include <sys/sysmacros.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
#include <limits.h>

int main( int argc, char **argv ) {

	//If no argument just print all filenames
	if (argc == 1){


	}
	struct stat staty;
	char pathHolder[PATH_MAX] = "";

	if(stat(argv[1], &staty) == -1){
		printf("bad filepath. exiting\n");
		exit(EXIT_FAILURE);
	}


  DIR *d;
  struct dirent *dir;
  d = opendir(".");
  if (d){
      while ((dir = readdir(d)) != NULL){
          printf("%s\n", dir->d_name);
      }
      closedir(d);
  }

	printf("%s\n", argv[1]);
	printf("file size: %ld\n", (long) staty.st_size);
	printf("number of blocks allocated: %lld\n", (long long)staty.st_blocks);
	printf("reference link count: %ld\n", (long) staty.st_nlink);
	printf("file permissions: UID=%ld, GID=%ld\n", (long) staty.st_uid, (long)staty.st_gid);
	printf("file inode: %ld\n", (long) staty.st_ino);


	getcwd( pathHolder, PATH_MAX );
  printf("Current working dir: %s\n", pathHolder);


	return 0;
}
